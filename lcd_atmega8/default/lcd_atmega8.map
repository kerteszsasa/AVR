Archive member included because of file (symbol)

c:/winavr-20081205/bin/../lib/gcc/avr/4.3.2/avr4\libgcc.a(_divmodhi4.o)
                              lcd.o (__divmodhi4)
c:/winavr-20081205/bin/../lib/gcc/avr/4.3.2/avr4\libgcc.a(_exit.o)
                              c:/winavr-20081205/bin/../lib/gcc/avr/4.3.2/../../../../avr/lib/avr4/crtm8.o (exit)
c:/winavr-20081205/bin/../lib/gcc/avr/4.3.2/avr4\libgcc.a(_copy_data.o)
                              lcd_atmega8.o (__do_copy_data)
c:/winavr-20081205/bin/../lib/gcc/avr/4.3.2/avr4\libgcc.a(_clear_bss.o)
                              lcd_atmega8.o (__do_clear_bss)
c:/winavr-20081205/bin/../lib/gcc/avr/4.3.2/avr4\libgcc.a(_udivmodhi4.o)
                              c:/winavr-20081205/bin/../lib/gcc/avr/4.3.2/avr4\libgcc.a(_divmodhi4.o) (__udivmodhi4)

Allocating common symbols
Common symbol       size              file

i                   0x1               lcd_atmega8.o
a                   0x4               lcd_atmega8.o

Memory Configuration

Name             Origin             Length             Attributes
text             0x00000000         0x00002000         xr
data             0x00800060         0x0000ffa0         rw !x
eeprom           0x00810000         0x00010000         rw !x
fuse             0x00820000         0x00000400         rw !x
lock             0x00830000         0x00000400         rw !x
signature        0x00840000         0x00000400         rw !x
*default*        0x00000000         0xffffffff

Linker script and memory map

LOAD c:/winavr-20081205/bin/../lib/gcc/avr/4.3.2/../../../../avr/lib/avr4/crtm8.o
LOAD lcd_atmega8.o
LOAD lcd.o
LOAD c:/winavr-20081205/bin/../lib/gcc/avr/4.3.2/avr4\libgcc.a
LOAD c:/winavr-20081205/bin/../lib/gcc/avr/4.3.2/../../../../avr/lib/avr4\libc.a
LOAD c:/winavr-20081205/bin/../lib/gcc/avr/4.3.2/avr4\libgcc.a

.hash
 *(.hash)

.dynsym
 *(.dynsym)

.dynstr
 *(.dynstr)

.gnu.version
 *(.gnu.version)

.gnu.version_d
 *(.gnu.version_d)

.gnu.version_r
 *(.gnu.version_r)

.rel.init
 *(.rel.init)

.rela.init
 *(.rela.init)

.rel.text
 *(.rel.text)
 *(.rel.text.*)
 *(.rel.gnu.linkonce.t*)

.rela.text
 *(.rela.text)
 *(.rela.text.*)
 *(.rela.gnu.linkonce.t*)

.rel.fini
 *(.rel.fini)

.rela.fini
 *(.rela.fini)

.rel.rodata
 *(.rel.rodata)
 *(.rel.rodata.*)
 *(.rel.gnu.linkonce.r*)

.rela.rodata
 *(.rela.rodata)
 *(.rela.rodata.*)
 *(.rela.gnu.linkonce.r*)

.rel.data
 *(.rel.data)
 *(.rel.data.*)
 *(.rel.gnu.linkonce.d*)

.rela.data
 *(.rela.data)
 *(.rela.data.*)
 *(.rela.gnu.linkonce.d*)

.rel.ctors
 *(.rel.ctors)

.rela.ctors
 *(.rela.ctors)

.rel.dtors
 *(.rel.dtors)

.rela.dtors
 *(.rela.dtors)

.rel.got
 *(.rel.got)

.rela.got
 *(.rela.got)

.rel.bss
 *(.rel.bss)

.rela.bss
 *(.rela.bss)

.rel.plt
 *(.rel.plt)

.rela.plt
 *(.rela.plt)

.text           0x00000000      0x372
 *(.vectors)
 .vectors       0x00000000       0x26 c:/winavr-20081205/bin/../lib/gcc/avr/4.3.2/../../../../avr/lib/avr4/crtm8.o
                0x00000000                __vectors
                0x00000000                __vector_default
 *(.vectors)
 *(.progmem.gcc*)
 *(.progmem*)
                0x00000026                . = ALIGN (0x2)
                0x00000026                __trampolines_start = .
 *(.trampolines)
 .trampolines   0x00000026        0x0 linker stubs
 *(.trampolines*)
                0x00000026                __trampolines_end = .
 *(.jumptables)
 *(.jumptables*)
 *(.lowtext)
 *(.lowtext*)
                0x00000026                __ctors_start = .
 *(.ctors)
                0x00000026                __ctors_end = .
                0x00000026                __dtors_start = .
 *(.dtors)
                0x00000026                __dtors_end = .
 SORT(*)(.ctors)
 SORT(*)(.dtors)
 *(.init0)
 .init0         0x00000026        0x0 c:/winavr-20081205/bin/../lib/gcc/avr/4.3.2/../../../../avr/lib/avr4/crtm8.o
                0x00000026                __init
 *(.init0)
 *(.init1)
 *(.init1)
 *(.init2)
 .init2         0x00000026        0xc c:/winavr-20081205/bin/../lib/gcc/avr/4.3.2/../../../../avr/lib/avr4/crtm8.o
 *(.init2)
 *(.init3)
 *(.init3)
 *(.init4)
 .init4         0x00000032       0x16 c:/winavr-20081205/bin/../lib/gcc/avr/4.3.2/avr4\libgcc.a(_copy_data.o)
                0x00000032                __do_copy_data
 .init4         0x00000048       0x10 c:/winavr-20081205/bin/../lib/gcc/avr/4.3.2/avr4\libgcc.a(_clear_bss.o)
                0x00000048                __do_clear_bss
 *(.init4)
 *(.init5)
 *(.init5)
 *(.init6)
 *(.init6)
 *(.init7)
 *(.init7)
 *(.init8)
 *(.init8)
 *(.init9)
 .init9         0x00000058        0x4 c:/winavr-20081205/bin/../lib/gcc/avr/4.3.2/../../../../avr/lib/avr4/crtm8.o
 *(.init9)
 *(.text)
 .text          0x0000005c        0x2 c:/winavr-20081205/bin/../lib/gcc/avr/4.3.2/../../../../avr/lib/avr4/crtm8.o
                0x0000005c                __vector_1
                0x0000005c                __vector_12
                0x0000005c                __bad_interrupt
                0x0000005c                __vector_6
                0x0000005c                __vector_3
                0x0000005c                __vector_11
                0x0000005c                __vector_13
                0x0000005c                __vector_17
                0x0000005c                __vector_7
                0x0000005c                __vector_5
                0x0000005c                __vector_4
                0x0000005c                __vector_2
                0x0000005c                __vector_15
                0x0000005c                __vector_8
                0x0000005c                __vector_14
                0x0000005c                __vector_10
                0x0000005c                __vector_16
                0x0000005c                __vector_18
 .text          0x0000005e       0xee lcd_atmega8.o
                0x00000076                InitADC
                0x00000082                InitTIMER
                0x000000de                main
                0x0000008c                __vector_9
                0x0000005e                Beolvas8bitADC
 .text          0x0000014c      0x1d4 lcd.o
                0x00000240                LCDWriteString
                0x000001a2                LCDByte
                0x0000014c                LCDBusyLoop
                0x000001f0                InitLCD
                0x0000025a                LCDWriteInt
                0x00000310                LCDGotoXY
 .text          0x00000320        0x0 c:/winavr-20081205/bin/../lib/gcc/avr/4.3.2/avr4\libgcc.a(_divmodhi4.o)
 .text          0x00000320        0x0 c:/winavr-20081205/bin/../lib/gcc/avr/4.3.2/avr4\libgcc.a(_exit.o)
 .text          0x00000320        0x0 c:/winavr-20081205/bin/../lib/gcc/avr/4.3.2/avr4\libgcc.a(_copy_data.o)
 .text          0x00000320        0x0 c:/winavr-20081205/bin/../lib/gcc/avr/4.3.2/avr4\libgcc.a(_clear_bss.o)
 .text          0x00000320        0x0 c:/winavr-20081205/bin/../lib/gcc/avr/4.3.2/avr4\libgcc.a(_udivmodhi4.o)
                0x00000320                . = ALIGN (0x2)
 *(.text.*)
 .text.libgcc   0x00000320       0x26 c:/winavr-20081205/bin/../lib/gcc/avr/4.3.2/avr4\libgcc.a(_divmodhi4.o)
                0x00000320                __divmodhi4
                0x00000320                _div
 .text.libgcc   0x00000346        0x0 c:/winavr-20081205/bin/../lib/gcc/avr/4.3.2/avr4\libgcc.a(_exit.o)
 .text.libgcc   0x00000346        0x0 c:/winavr-20081205/bin/../lib/gcc/avr/4.3.2/avr4\libgcc.a(_copy_data.o)
 .text.libgcc   0x00000346        0x0 c:/winavr-20081205/bin/../lib/gcc/avr/4.3.2/avr4\libgcc.a(_clear_bss.o)
 .text.libgcc   0x00000346       0x28 c:/winavr-20081205/bin/../lib/gcc/avr/4.3.2/avr4\libgcc.a(_udivmodhi4.o)
                0x00000346                __udivmodhi4
                0x0000036e                . = ALIGN (0x2)
 *(.fini9)
 .fini9         0x0000036e        0x0 c:/winavr-20081205/bin/../lib/gcc/avr/4.3.2/avr4\libgcc.a(_exit.o)
                0x0000036e                exit
                0x0000036e                _exit
 *(.fini9)
 *(.fini8)
 *(.fini8)
 *(.fini7)
 *(.fini7)
 *(.fini6)
 *(.fini6)
 *(.fini5)
 *(.fini5)
 *(.fini4)
 *(.fini4)
 *(.fini3)
 *(.fini3)
 *(.fini2)
 *(.fini2)
 *(.fini1)
 *(.fini1)
 *(.fini0)
 .fini0         0x0000036e        0x4 c:/winavr-20081205/bin/../lib/gcc/avr/4.3.2/avr4\libgcc.a(_exit.o)
 *(.fini0)
                0x00000372                _etext = .

.data           0x00800060        0x2 load address 0x00000372
                0x00800060                PROVIDE (__data_start, .)
 *(.data)
 .data          0x00800060        0x0 c:/winavr-20081205/bin/../lib/gcc/avr/4.3.2/../../../../avr/lib/avr4/crtm8.o
 .data          0x00800060        0x2 lcd_atmega8.o
                0x00800061                hour
                0x00800060                min
 .data          0x00800062        0x0 lcd.o
 .data          0x00800062        0x0 c:/winavr-20081205/bin/../lib/gcc/avr/4.3.2/avr4\libgcc.a(_divmodhi4.o)
 .data          0x00800062        0x0 c:/winavr-20081205/bin/../lib/gcc/avr/4.3.2/avr4\libgcc.a(_exit.o)
 .data          0x00800062        0x0 c:/winavr-20081205/bin/../lib/gcc/avr/4.3.2/avr4\libgcc.a(_copy_data.o)
 .data          0x00800062        0x0 c:/winavr-20081205/bin/../lib/gcc/avr/4.3.2/avr4\libgcc.a(_clear_bss.o)
 .data          0x00800062        0x0 c:/winavr-20081205/bin/../lib/gcc/avr/4.3.2/avr4\libgcc.a(_udivmodhi4.o)
 *(.data*)
 *(.rodata)
 *(.rodata*)
 *(.gnu.linkonce.d*)
                0x00800062                . = ALIGN (0x2)
                0x00800062                _edata = .
                0x00800062                PROVIDE (__data_end, .)

.bss            0x00800062        0x8
                0x00800062                PROVIDE (__bss_start, .)
 *(.bss)
 .bss           0x00800062        0x0 c:/winavr-20081205/bin/../lib/gcc/avr/4.3.2/../../../../avr/lib/avr4/crtm8.o
 .bss           0x00800062        0x3 lcd_atmega8.o
                0x00800062                timer
                0x00800064                sec
 .bss           0x00800065        0x0 lcd.o
 .bss           0x00800065        0x0 c:/winavr-20081205/bin/../lib/gcc/avr/4.3.2/avr4\libgcc.a(_divmodhi4.o)
 .bss           0x00800065        0x0 c:/winavr-20081205/bin/../lib/gcc/avr/4.3.2/avr4\libgcc.a(_exit.o)
 .bss           0x00800065        0x0 c:/winavr-20081205/bin/../lib/gcc/avr/4.3.2/avr4\libgcc.a(_copy_data.o)
 .bss           0x00800065        0x0 c:/winavr-20081205/bin/../lib/gcc/avr/4.3.2/avr4\libgcc.a(_clear_bss.o)
 .bss           0x00800065        0x0 c:/winavr-20081205/bin/../lib/gcc/avr/4.3.2/avr4\libgcc.a(_udivmodhi4.o)
 *(.bss*)
 *(COMMON)
 COMMON         0x00800065        0x5 lcd_atmega8.o
                0x00800065                i
                0x00800066                a
                0x0080006a                PROVIDE (__bss_end, .)
                0x00000372                __data_load_start = LOADADDR (.data)
                0x00000374                __data_load_end = (__data_load_start + SIZEOF (.data))

.noinit         0x0080006a        0x0
                0x0080006a                PROVIDE (__noinit_start, .)
 *(.noinit*)
                0x0080006a                PROVIDE (__noinit_end, .)
                0x0080006a                _end = .
                0x0080006a                PROVIDE (__heap_start, .)

.eeprom         0x00810000        0x0
 *(.eeprom*)
                0x00810000                __eeprom_end = .

.fuse
 *(.fuse)
 *(.lfuse)
 *(.hfuse)
 *(.efuse)

.lock
 *(.lock*)

.signature
 *(.signature*)

.stab
 *(.stab)

.stabstr
 *(.stabstr)

.stab.excl
 *(.stab.excl)

.stab.exclstr
 *(.stab.exclstr)

.stab.index
 *(.stab.index)

.stab.indexstr
 *(.stab.indexstr)

.comment
 *(.comment)

.debug
 *(.debug)

.line
 *(.line)

.debug_srcinfo
 *(.debug_srcinfo)

.debug_sfnames
 *(.debug_sfnames)

.debug_aranges  0x00000000       0x40
 *(.debug_aranges)
 .debug_aranges
                0x00000000       0x20 lcd_atmega8.o
 .debug_aranges
                0x00000020       0x20 lcd.o

.debug_pubnames
                0x00000000       0xf1
 *(.debug_pubnames)
 .debug_pubnames
                0x00000000       0x86 lcd_atmega8.o
 .debug_pubnames
                0x00000086       0x6b lcd.o

.debug_info     0x00000000      0x8f7
 *(.debug_info)
 .debug_info    0x00000000      0x2ee lcd_atmega8.o
 .debug_info    0x000002ee      0x609 lcd.o
 *(.gnu.linkonce.wi.*)

.debug_abbrev   0x00000000      0x31e
 *(.debug_abbrev)
 .debug_abbrev  0x00000000      0x17b lcd_atmega8.o
 .debug_abbrev  0x0000017b      0x1a3 lcd.o

.debug_line     0x00000000      0x656
 *(.debug_line)
 .debug_line    0x00000000      0x290 lcd_atmega8.o
 .debug_line    0x00000290      0x3c6 lcd.o

.debug_frame    0x00000000       0xd0
 *(.debug_frame)
 .debug_frame   0x00000000       0x60 lcd_atmega8.o
 .debug_frame   0x00000060       0x70 lcd.o

.debug_str      0x00000000      0x1a2
 *(.debug_str)
 .debug_str     0x00000000      0x108 lcd_atmega8.o
                                0x13c (size before relaxing)
 .debug_str     0x00000108       0x9a lcd.o
                                0x185 (size before relaxing)

.debug_loc      0x00000000      0x3ee
 *(.debug_loc)
 .debug_loc     0x00000000       0xf3 lcd_atmega8.o
 .debug_loc     0x000000f3      0x2fb lcd.o

.debug_macinfo
 *(.debug_macinfo)
OUTPUT(lcd_atmega8.elf elf32-avr)
LOAD linker stubs

.debug_ranges   0x00000000       0xd8
 .debug_ranges  0x00000000       0x48 lcd_atmega8.o
 .debug_ranges  0x00000048       0x90 lcd.o
